{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "sshKeyData": {
      		"type": "string",
      			"metadata": {
        			"description": "SSH rsa public key"
      		}
   		 },
   	"virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "allowedValues": [
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_B4ms",
        "Standard_B8ms"
      	],
		      "metadata": {
		        "description": "This is the Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
      		}
    	},
        "jenkinsDnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Jenkins Virtual Machine."
            }
        },
        "resourcePrefix": {
            "type": "string",
            "defaultValue": "jenkins",
            "metadata": {
                "description": "Prefix of jenkins resource group item names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "resourcePrefix": "jenkins",
        "nicName": "[concat(variables('resourcePrefix'), '-nic')]",
        "subnetName": "[concat(variables('resourcePrefix'), '-subnet')]",
        "publicIPAddressName": "[concat(variables('resourcePrefix'), '-publicIP')]",
        "vmName": "[concat(variables('resourcePrefix'), '-vm')]",
        "vmExtensionName": "[concat(variables('resourcePrefix'), '-init')]",
        "virtualNetworkName": "[concat(variables('resourcePrefix'), '-vnet')]",
        "frontEndNSGName": "[concat(variables('resourcePrefix'), '-nsg')]",
        "vNetAddressPrefixes": "10.0.0.0/16",
        "sNetAddressPrefixes": "10.0.0.0/24",
        "vmPrivateIP": "10.0.0.5",     
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "extensionName": "DockerExtension"
    },
    "resources": [
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('jenkinsDnsPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('frontEndNSGName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "NSG - Front End"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http-rule",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('sNetAddressPrefixes')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('frontEndNSGName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('frontEndNSGName'))]"
            ]
        },
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIpAddress": "[variables('vmPrivateIP')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),'/subnets/',variables('subnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
            			"disablePasswordAuthentication": true,
				            "ssh": {
				              "publicKeys": [
				                {
				                  "path": "[variables('sshKeyPath')]",
				                  "keyData": "[parameters('sshKeyData')]"
				                }
				        	]
				    	}
					}
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
                }
            },
            {
		      "type": "Microsoft.Compute/virtualMachines/extensions",
		      "name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
		      "apiVersion": "2017-03-30",
		      "location": "[parameters('location')]",
		      "dependsOn": [
		        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
		      ],
		      "properties": {
		        "publisher": "Microsoft.Azure.Extensions",
		        "type": "DockerExtension",
		        "typeHandlerVersion": "1.0",
		        "autoUpgradeMinorVersion": true,
		        "settings": {}
		      }
		    },
		    {
		      "type": "Microsoft.Compute/virtualMachines/extensions",
		      "name": "[concat(variables('vmName'),'/newuserscript')]",
		      "apiVersion": "2017-03-30",
		      "location": "[parameters('location')]",
		      "dependsOn": [
		        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
		        "[variables('extensionName')]"
		      ],
		      "properties": {
		        "publisher": "Microsoft.Azure.Extensions",
		        "type": "CustomScript",
		        "typeHandlerVersion": "2.0",
		        "autoUpgradeMinorVersion": true,
		        "settings": {
		          "fileUris": [
		            "https://raw.githubusercontent.com/glynelite/MinecraftOnAzure/master/SpigotVM/install_jenkins.sh"
		          ],
		          "commandToExecute": "bash install_jenkins.sh"
		          }
		      }
		    }
		  ]
		}
    